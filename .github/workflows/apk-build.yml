name: APK Build

on:
  # Runs on push to any of the below branches
  push:
    branches: [main]
    paths:
      - 'example*/**'

  # Runs on pull request events that target one of the below branches
  pull_request:
    branches: [main]
    paths:
      - 'example*/**'

  # Allows you to run this workflow manually from the Actions tab of the repository
  workflow_dispatch:

env:
  # https://flet.dev/docs/publish#versioning
  MAJOR_VERSION: 0
  YEARMONTH: ${{ format('{0}{1}', github.event.repository.pushed_at | date('yy'), github.event.repository.pushed_at | date('MM')) }}
  BUILD_NUMBER: ${{ github.run_number }}
  PYTHON_VERSION: 3.12.2
  FLUTTER_VERSION: 3.24.0

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            example1:
              - 'example1/**'
            # Add more projects as needed

  build:
    needs: changes
    if: ${{ needs.changes.outputs.projects != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJSON(needs.changes.outputs.projects) }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ${{ matrix.project }}/requirements.txt

    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Setup Java JDK
      uses: actions/setup-java@v4.2.1
      with:
        distribution: 'temurin' # See https://github.com/marketplace/actions/setup-java-jdk#supported-distributions for available options
        java-version: '21'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install Android SDK components and accept licenses
      run: |
        yes | sdkmanager --licenses
        sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0" "ndk;25.1.8937393" "cmdline-tools;latest"

    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build libgtk-3-dev

    - name: Flet Build APK
      run: |
        flutter config --no-analytics  # disable flutter analytics
        cd ${{ matrix.project }}       # 프로젝트 디렉토리로 이동
        # adapt the command to your needs - https://flet.dev/docs/publish 
        flet build apk --verbose --build-version '${{ env.MAJOR_VERSION }}.${{ env.YEARMONTH }}.${{ env.BUILD_NUMBER }}'

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4.3.4  # https://github.com/marketplace/actions/upload-a-build-artifact
      with:
        name: apk-build-artifact-${{ matrix.project }}  # 프로젝트별로 고유한 아티팩트 이름 사용
        path: ${{ matrix.project }}/build/apk  # location of Flet build output
        if-no-files-found: error  # Fail the action with an error message if no files are found
        overwrite: true  # 기존 아티팩트 덮어쓰기 허용
